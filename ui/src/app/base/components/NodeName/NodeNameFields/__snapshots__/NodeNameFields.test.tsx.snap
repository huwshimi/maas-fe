// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NodeNameFields displays the fields 1`] = `
<NodeNameFields
  setHostnameError={
    [MockFunction] {
      "calls": Array [
        Array [
          null,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <div
    className="node-name__hostname-wrapper u-no-margin--right"
  >
    <div
      aria-hidden="true"
      className="node-name__hostname-spacer"
    />
    <FormikField
      className="node-name__hostname"
      displayError={false}
      label="Hostname"
      name="hostname"
      takeFocus={true}
      type="text"
      wrapperClassName="u-no-margin--right"
    >
      <Input
        aria-label="Hostname"
        className="node-name__hostname"
        error={null}
        id="mock-redux-js-nanoid-1"
        label="Hostname"
        name="hostname"
        onBlur={[Function]}
        onChange={[Function]}
        takeFocus={true}
        type="text"
        value=""
        wrapperClassName="u-no-margin--right"
      >
        <Field
          className="u-no-margin--right"
          error={null}
          forId="mock-redux-js-nanoid-1"
          helpId="mock-nanoid-2"
          isTickElement={false}
          label="Hostname"
          validationId="mock-nanoid-1"
        >
          <div
            className="p-form__group p-form-validation u-no-margin--right"
          >
            <Label
              forId="mock-redux-js-nanoid-1"
            >
              <label
                className="p-form__label"
                htmlFor="mock-redux-js-nanoid-1"
              >
                Hostname
              </label>
            </Label>
            <div
              className="p-form__control u-clearfix"
            >
              <input
                aria-describedby={null}
                aria-errormessage={null}
                aria-invalid={false}
                aria-label="Hostname"
                className="p-form-validation__input node-name__hostname"
                id="mock-redux-js-nanoid-1"
                label="Hostname"
                name="hostname"
                onBlur={[Function]}
                onChange={[Function]}
                type="text"
                value=""
              />
            </div>
          </div>
        </Field>
      </Input>
    </FormikField>
  </div>
  <span
    className="node-name__dot u-nudge-right--small u-nudge-left--small u-no-margin--right"
  >
    .
  </span>
  <DomainSelect
    className="u-no-margin--bottom"
    label="Domain"
    name="domain"
    valueKey="id"
    wrapperClassName="node-name__domain"
  >
    <FormikField
      className="u-no-margin--bottom"
      component={[Function]}
      disabled={false}
      label="Domain"
      name="domain"
      options={
        Array [
          Object {
            "disabled": true,
            "label": "Select domain",
            "value": "",
          },
        ]
      }
      wrapperClassName="node-name__domain"
    >
      <Select
        aria-label="Domain"
        className="u-no-margin--bottom"
        disabled={false}
        error={null}
        id="mock-redux-js-nanoid-2"
        label="Domain"
        name="domain"
        onBlur={[Function]}
        onChange={[Function]}
        options={
          Array [
            Object {
              "disabled": true,
              "label": "Select domain",
              "value": "",
            },
          ]
        }
        value=""
        wrapperClassName="node-name__domain"
      >
        <Field
          className="node-name__domain"
          error={null}
          forId="mock-redux-js-nanoid-2"
          helpId="mock-nanoid-4"
          isSelect={true}
          label="Domain"
          validationId="mock-nanoid-3"
        >
          <div
            className="p-form__group p-form-validation node-name__domain"
          >
            <Label
              forId="mock-redux-js-nanoid-2"
            >
              <label
                className="p-form__label"
                htmlFor="mock-redux-js-nanoid-2"
              >
                Domain
              </label>
            </Label>
            <div
              className="p-form__control u-clearfix"
            >
              <div
                className="p-form-validation__select-wrapper"
              >
                <select
                  aria-describedby={null}
                  aria-errormessage={null}
                  aria-invalid={false}
                  aria-label="Domain"
                  className="p-form-validation__input u-no-margin--bottom"
                  disabled={false}
                  id="mock-redux-js-nanoid-2"
                  name="domain"
                  onBlur={[Function]}
                  onChange={[Function]}
                  value=""
                >
                  <option
                    disabled={true}
                    key="Select domain"
                    value=""
                  >
                    Select domain
                  </option>
                </select>
              </div>
            </div>
          </div>
        </Field>
      </Select>
    </FormikField>
  </DomainSelect>
</NodeNameFields>
`;
